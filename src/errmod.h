#ifndef LIBTMAN_ERRMOD_H
#define LIBTMAN_ERRMOD_H

#define ERRMSGSIZ   100
#define NERRCODE    50

enum tman_errno {
    LIBTMAN_OK,                 /* OK, interpret output as path or output */

    LIBTMAN_DB,
    LIBTMAN_ESYSVAR,
    LIBTMAN_EINIT,
    LIBTMAN_SYS_FS,
    LIBTMAN_MALLOC,

    LIBTMAN_PRJ_EXISTS,
    LIBTMAN_PRJ_LOAD,
    LIBTMAN_PRJ_ILLEG,
    LIBTMAN_PRJ_NOSUCH,
    LIBTMAN_PRJ_SAVE,
    LIBTMAN_PRJ_BOARD_ADD,
    LIBTMAN_PRJ_BOARD_CHECK,

    LIBTMAN_BRD_LOAD,
    LIBTMAN_BRD_SAVE,
    LIBTMAN_BRD_ILLEG,
    LIBTMAN_BRD_NOSUCH,
    LIBTMAN_BRD_EXISTS,

    LIBTMAN_ID_LOAD,
    LIBTMAN_ID_SAVE,
    LIBTMAN_ID_ILLEG,
    LIBTMAN_ID_NOSUCH,
    LIBTMAN_ID_EXISTS,

    LIBTMAN_COL_ADD,
    LIBTMAN_COL_GET,
    LIBTMAN_COL_MOVE,
    LIBTMAN_COL_DEL,
    LIBTMAN_COL_EXISTS,

    LIBTMAN_DIR_PRJ_DEL,
    LIBTMAN_DIR_PRJ_MAKE,
    LIBTMAN_DIR_PRJ_OPEN,
    LIBTMAN_DIR_PRJ_RENAME,

    LIBTMAN_DIR_BRD_DEL,
    LIBTMAN_DIR_BRD_MAKE,
    LIBTMAN_DIR_BRD_MOVE,
    LIBTMAN_DIR_BRD_OPEN,

    LIBTMAN_DIR_ID_DEL,
    LIBTMAN_DIR_ID_MAKE,
    LIBTMAN_DIR_ID_MOVE,
    LIBTMAN_DIR_ID_OPEN,

    LIBTMAN_UNIT_ADD,
    LIBTMAN_UNIT_DEL,
    LIBTMAN_UNIT_GET,
    LIBTMAN_UNIT_ILLEG,
    LIBTMAN_UNIT_KEY,
    LIBTMAN_UNIT_LOAD,
    LIBTMAN_UNIT_SAVE,
    LIBTMAN_UNIT_SET,

    LIBTMAN_COLUMN_DEL,
    LIBTMAN_COLUMN_GET,
    LIBTMAN_COLUMN_ILLEG,
    LIBTMAN_COLUMN_KEY,
    LIBTMAN_COLUMN_LOAD,
    LIBTMAN_COLUMN_SAVE,

    LIBTMAN_NODEF_ERR,

    __LIBTMAN_STATUS_LAST
};

struct tman_err_codes {
    enum tman_errno err;
    char desc[ERRMSGSIZ + 1];
};

int emod_set(int err);
char *emod_strerror(int errnum);

#endif
